{"version":3,"sources":["components/app/style.js","components/header/style.js","components/header/index.js","components/list/style.js","components/button/style.js","components/button/index.js","components/list__item/style.js","components/list__item/index.js","components/overlay/style.js","components/overlay/index.js","service/api.js","components/list/index.js","components/app/index.js","index.js"],"names":["GlobalStyle","createGlobalStyle","HeaderContainer","styled","header","Header","className","Wrapper","div","ButtonList","section","ListStyle","ButtonStyle","button","Button","text","fn","onClick","type","ListItemStyle","ListItem","title","imgSrc","created","author","url","id","src","alt","href","OverlayStyle","Overlay","snoowrapFn","snoowrap","clientId","clientSecret","userAgent","refreshToken","moment","locale","api","getSubreddit","List","props","getResponse","category","a","setState","loading","getHot","limit","getNew","getRising","error","console","log","getPosts","param","then","response","posts","postsToShow","loadMore","postShow","state","count","fetchMore","amount","elementId","document","getElementById","window","scrollTo","top","offsetTop","left","behavior","this","map","post","key","unix","fromNow","name","thumbnail","Component","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6d74a9cd.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle` \r\n    html {\r\n        font-size: 16px;\r\n        overflow-x: hidden;\r\n        line-height: 24px; \r\n    }\r\n  \r\n    *, *:after, *:before {\r\n        box-sizing: border-box;\r\n        margin: 0;\r\n        padding: 0; \r\n    }\r\n  \r\n    body {\r\n        min-height: 100vh;\r\n        display: flex;\r\n        flex-flow: column;\r\n        font-display: swap;\r\n        font-family: Helvetica, Arial, sans-serif;\r\n        font-weight: normal;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n        font-smooth: always;\r\n        -webkit-font-smoothing: antialiased;\r\n        backface-visibility: hidden; \r\n    }\r\n  \r\n    .app{\r\n        display:flex;\r\n        flex-flow:column;\r\n        width:100%;\r\n    }\r\n\r\n    .bold{\r\n        font-weight:bold;\r\n    }\r\n\r\n    .orange{\r\n        color: #ff5500;\r\n    }\r\n\r\n    .gray{\r\n        color: #666666;\r\n    }\r\n        \r\n    @-webkit-keyframes spin {\r\n        0% {\r\n            -webkit-transform: rotate(0);\r\n            transform: rotate(0)\r\n        }\r\n\r\n        100% {\r\n            -webkit-transform: rotate(360deg);\r\n            transform: rotate(360deg)\r\n        }\r\n    }\r\n\r\n    @keyframes spin {\r\n        0% {\r\n            -webkit-transform: rotate(0);\r\n            transform: rotate(0)\r\n        }\r\n\r\n        100% {\r\n            -webkit-transform: rotate(360deg);\r\n            transform: rotate(360deg)\r\n        }\r\n    }\r\n\r\n`;\r\nexport default GlobalStyle;","import styled from 'styled-components'\r\n\r\nexport const HeaderContainer = styled.header`\r\n    background-color: #333333;\r\n    padding: 32px 50px;\r\n    width:100%;\r\n    display:flex;\r\n    flex-flow:row wrap;\r\n    align-items:center;\r\n    justify-content:center;\r\n\r\n    @media screen and (max-width:768px){\r\n        padding: 16px;\r\n    }\r\n\r\n   .header__title{\r\n       color:#fff;\r\n       font-weight:bolder;\r\n       font-family: Arial, sans-serif;\r\n       font-size:25px;\r\n   }\r\n\r\n   .header__orange{\r\n       color:#ff5500;\r\n   }\r\n   \r\n`;\r\n","import React from \"react\";\r\nimport { HeaderContainer } from './style'\r\n\r\n\r\nconst Header = () => (\r\n    <HeaderContainer>\r\n      <header className=\"header\">\r\n          <h2 className=\"header__title\">\r\n            REACT<span className=\"header__orange\">JS</span>\r\n          </h2>\r\n      </header>\r\n    </HeaderContainer>\r\n);\r\n\r\nexport default Header;\r\n","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\n   width:1059px;\r\n   padding: 0 50px;\r\n   margin: 0 auto;\r\n   @media screen and (max-width:768px){\r\n       width:100%;\r\n       padding: 0 16px;\r\n   }\r\n\r\n`;\r\n\r\nexport const ButtonList = styled.section`\r\n   padding: 10px 0;\r\n   display:flex;\r\n   flex-flow: row wrap;\r\n   justify-content:center;\r\n   align-items:center;\r\n`;\r\n\r\nexport const ListStyle = styled.section`\r\n   \r\n`;\r\n","import styled from 'styled-components'\r\n\r\nexport const ButtonStyle = styled.button`\r\n    background-color: #666666;\r\n    color:#fff;\r\n    min-width: 160px;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 6px;\r\n    font-size:17px;\r\n    text-transform: uppercase;\r\n    outline: 0;\r\n    transition: .2s linear;\r\n    cursor:pointer;\r\n\r\n    &:hover{\r\n        opacity:.7;\r\n    }\r\n    \r\n    & + &{\r\n        @media screen and (min-width:768px){\r\n            margin-left:5px;\r\n        }\r\n        @media screen and (max-width:768px){\r\n            margin-top:5px;\r\n        }\r\n    }\r\n    \r\n    &.fill{\r\n        width:100%;\r\n\r\n        section + &:last-child{\r\n            margin:10px 0;\r\n        }\r\n    }\r\n\r\n    &.active{\r\n        background-color:#ff5500;\r\n    }\r\n\r\n    @media screen and (max-width:768px){\r\n        width:100%;\r\n    }\r\n`;\r\n\r\nexport default ButtonStyle;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport ButtonStyle from './style'\r\n\r\nconst Button = ({text, className, fn }) => {\r\n    return (\r\n        <ButtonStyle className={className} onClick={fn} type=\"button\">\r\n            {text}\r\n        </ButtonStyle>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    fn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import styled from 'styled-components'\r\n\r\nexport const ListItemStyle = styled.div`\r\n    display:flex;\r\n    flex-flow:row;\r\n    background:#fff;\r\n    outline: 0;\r\n    transition: .2s linear;\r\n    cursor:pointer;\r\n    color: #000;\r\n    padding:11px 0 11px 0;\r\n    align-items:center;\r\n    border-bottom: 1px solid  #6b6b6b;\r\n\r\n    &:hover{\r\n        background: #eeeeee;\r\n    }\r\n\r\n    @media screen and (max-width:768px){\r\n        flex-flow:column;\r\n    }\r\n\r\n    .listItem__img{\r\n        width:64px;\r\n        height:64px;\r\n        object-fit:cover;\r\n        display:block;\r\n        \r\n    }\r\n\r\n    .listItem__content{\r\n        max-width:100%;\r\n        \r\n        @media screen and (max-width:768px){\r\n            margin-top:10px;\r\n            width:100%\r\n        }\r\n\r\n        @media screen and (min-width:768px){        \r\n            &:not(:first-child){\r\n                margin-left:10px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .listItem__title{\r\n        font-size: 24px;\r\n        font-weight:bold;\r\n        \r\n        @media screen and (max-width:768px){\r\n            font-size:18px;\r\n\r\n            &:not(:last-child){\r\n                margin-bottom:3px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .listItem__info{\r\n        color:#000;\r\n\r\n        span{\r\n            &:first-child:not(:last-child){\r\n                margin-right:5px;\r\n            }\r\n            &:last-child:not(:first-child){\r\n                margin-left:5px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .listItem__link{\r\n        color:#000;\r\n        text-decoration: underline;\r\n        \r\n        @media screen and (max-width:768px){\r\n            &:not(:first-child){\r\n                margin-top:3px;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { ListItemStyle } from './style';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst imgDefault = \"https://static.thenounproject.com/png/340719-200.png\";\r\nconst ListItem = ({title, imgSrc, created, author, url, id }) => {\r\n      return (\r\n          <ListItemStyle id={id}>\r\n              <img className=\"listItem__img\" src={imgSrc === 'self' ||\r\n               imgSrc === 'default' ? imgDefault : imgSrc } alt=\"thumbnail\" />\r\n        \r\n              <div className=\"listItem__content\">\r\n                <h2 className=\"listItem__title\">\r\n                    {title}\r\n                </h2>\r\n                <p className=\"listItem__info\">\r\n                    <span className=\"gray\">\r\n                        Enviado {created} \r\n                    </span>\r\n                    por \r\n                    <span className=\"orange\"> \r\n                        {author}\r\n                    </span>\r\n                </p>\r\n                <a href={url} className=\"listItem__link\">\r\n                    Link\r\n                </a>\r\n              </div>    \r\n          </ListItemStyle>\r\n      );\r\n};\r\n\r\nListItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    created: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ListItem;\r\n","import styled from 'styled-components'\r\n\r\nexport const OverlayStyle = styled.div`\r\n    position:fixed;\r\n    height:100%;\r\n    width:100%;\r\n    left:0;\r\n    top:0;\r\n    display:flex;\r\n    flex-flow:column;\r\n    z-index:999;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:before{\r\n        content: '';\r\n        height:100%;\r\n        width:100%;\r\n        left:0;\r\n        background-color: #fff;\r\n        top:0;\r\n        opacity: .6;\r\n    }\r\n\r\n    &:after{\r\n        content: '';\r\n        width: 2em;\r\n        height: 2em;\r\n        background: 0 0;\r\n        position: absolute;\r\n        opacity: 1;\r\n        pointer-events: none;\r\n        border: 4px solid #FA6300;\r\n        border-top: 4px solid transparent;\r\n        border-radius: 50%;\r\n        margin: auto;\r\n        transition: all 0.25s ease-out;\r\n        z-index: 2;\r\n        -webkit-animation: spin 1s linear infinite;\r\n        animation: spin 1s linear infinite;\r\n\r\n        @media screen and (min-width:768px){\r\n            width: 5em;\r\n            height: 5em;\r\n            border: 7px solid #FA6300;\r\n            border-top: 7px solid transparent;\r\n        }\r\n    }\r\n`;\r\n\r\nexport default OverlayStyle;","import React from \"react\";\r\nimport OverlayStyle from './style'\r\n\r\nconst Overlay = () => {\r\n    return (\r\n        <OverlayStyle >            \r\n        </OverlayStyle>\r\n    );\r\n};\r\n\r\nexport default Overlay;\r\n","import snoowrap from 'snoowrap';\r\n\r\n\r\nconst snoowrapFn  = new snoowrap({\r\n    clientId: 'Gg4EzQmlGRdvsg', // ID REDDIT\r\n    clientSecret: 'lUXT2TTTReMnfjMCiqrIEk6X6As', // SECRET REDDIT\r\n    userAgent: 'React agent ', //STRING RANDOM USER BROSWER AGENT\r\n    refreshToken: '514966701788-8qV_dAZZg8DPxgYsncXqu7MrvCE', //TOKEN REDDIT\r\n});\r\n\r\nexport default snoowrapFn;","import React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/pt-br'\r\nimport { ListStyle, Wrapper, ButtonList } from './style';\r\nimport Button from '../button';\r\nimport ListItem from '../list__item';\r\nimport Overlay from '../overlay';\r\nimport snoowrapFn from '../../service/api';\r\n\r\nmoment.locale('pt-BR');\r\nconst api = snoowrapFn.getSubreddit('reactjs');\r\nexport default class List extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = { \r\n            error: false,                       \r\n            posts: [],\r\n            category: null,            \r\n            postsToShow: 0\r\n        }     \r\n    \r\n    } \r\n    \r\n    componentDidMount(){\r\n        this.getPosts(\"hot\");\r\n    }\r\n\r\n    getResponse = async category =>{\r\n        this.setState({\r\n            loading:true,\r\n        })\r\n\r\n        try{\r\n            if (category === 'hot') {\r\n                category = await api.getHot({limit: 8})\r\n            }\r\n            else if (category === 'new') {\r\n                category = await api.getNew({limit: 8})\r\n            }\r\n            else if (category === 'rising') {\r\n                category = await api.getRising({limit: 8})\r\n            }\r\n            return category;\r\n        }\r\n        \r\n        catch(error){\r\n            this.setState({\r\n                loading:false,\r\n                error:true\r\n            })\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    getPosts  = (param) => (        \r\n        this.getResponse(param).then(response => {\r\n            this.setState({\r\n                posts: response,\r\n                category:  param,\r\n                loading:false,\r\n                postsToShow: 10,\r\n                error:false\r\n            })\r\n        })\r\n    )\r\n\r\n    loadMore = (postShow) => (\r\n        this.getResponse(this.state.category).then(count => {\r\n            count.fetchMore({amount: postShow + 10}).then(response => {\r\n                             \r\n                this.setState({\r\n                    posts: response,\r\n                    loading:false,\r\n                    postsToShow: postShow + 10,\r\n                    error:false\r\n                })\r\n\r\n                let elementId = document.getElementById(this.state.posts[this.state.postsToShow - 10].id)\r\n                window.scrollTo({top: elementId.offsetTop, left: 0, behavior: 'smooth' });\r\n\r\n            })\r\n        })\r\n    )\r\n\r\n    render() {\r\n        return(\r\n            <Wrapper>\r\n                <ButtonList>\r\n                    <Button className={ this.state.category === \"hot\" ? \"active\" : \"\" }\r\n                     fn={() => this.getPosts(\"hot\")} text=\"Hot\"  />\r\n                    <Button className={ this.state.category === \"new\" ? \"active\" : \"\" }\r\n                    fn={() => this.getPosts(\"new\")} text=\"News\"  />\r\n                    <Button className={ this.state.category === \"rising\" ? \"active\" : \"\" }\r\n                    fn={() => this.getPosts(\"rising\")} text=\"Rising\"  />\r\n                </ButtonList>\r\n\r\n                <ListStyle >\r\n                    {this.state.posts.map(post => (\r\n                        <ListItem key={post.id} id={post.id} title={post.title} created={moment.unix(post.created).fromNow()} author={post.author.name} url={post.url} imgSrc={post.thumbnail}/>\r\n                    ))}\r\n                </ListStyle>\r\n\r\n                <Button fn={() => this.loadMore(this.state.postsToShow)} className={\"fill bold\"} text=\"+ Ver mais\"  />\r\n                {this.state.loading &&\r\n                    <Overlay/>\r\n                }\r\n            </Wrapper>\r\n        )\r\n      }\r\n}","import React from 'react';\nimport GlobalStyle from './style'\nimport Header from '../header';\nimport List from '../list';\n\n\nfunction App() {\n    return (\n      <div className=\"app\">\n        <GlobalStyle />\n        <Header />\n        <List></List>\n      </div>  \n    );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}